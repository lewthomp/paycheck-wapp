### Scalars

scalar DateTime

### Types

type UserData {
  shifts: [Shift]!
  payrates: [Payrate]!
}

type User {
  id: Int!
  name: Str!
  userData: UserData!
  joined: DateTime!
}

type Time {
  hour: Int!
  minute: Int!
}

type Shift {
  _id: ID!
  id: Int!
  start: DateTime!
  end: DateTime!
  created: DateTime!
  notes: String
}

type Payrate {
  id: Int!
  rate: Float!
  days: [Int!]!
  periodStart: Time!
  periodEnd: Time!
  holiday: Boolean!
  created: DateTime!
}

### Inputs

input AddTimeInput {
  hour: Int!
  minute: Int!
}

input AddShiftInput {
  start: DateTime!
  end: DateTime!
  notes: String
}

input AddPayrateInput {
  rate: Float!
  days: [Int!]!
  holiday: Boolean! = False
  periodStart: AddTimeInput!
  periodEnd: AddTimeInput!
}

###### Top level declarations
type Query {
  about: String!
  shiftList: [Shift!]!
  payrateList: [Payrate!]!
}

type Mutation {
  setAboutMessage(message: String!): String

  addShift(input: AddShiftInput!): Shift!
  addPayrate(rates: AddPayrateInput!): Payrate!

  deleteShift(id: Int!): Boolean!
  deletePayrate(id: Int!): Boolean!
}
